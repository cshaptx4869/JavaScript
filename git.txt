git笔记

1.自报家门
Git config --global user.name #你是谁
Git config --global user.email #怎么联系你
git config --list #查看git的配置情况

2.创建版本库
cd 路径
mkdir 文件名 #最好不要是中文,可能会出现问题
git init #初始化 .git隐藏文件 储存版本信息

3.添加文件
 git status #查看状态(红色 未提交 )
 git add 文件名 #3.1单个文件到缓存区
 git add . #添加多个文件到缓存区
 git commit -m "说明" #3.2一次性将暂存区的文件提交到本地仓库(版本库)
 git log #查看commit的信息
 git log --oneline #查看简化的日志

4.总结
工作区------>暂存区-------->版本库
 (红)	add   (绿)  commit

5.删除
git rm 文件名 #删除文件
git commit -m "删除文件啥啥" #提交

6.一次性提交(工作区-->版本库) 
git commit -am '说明' #跳过git add添加到暂存区 直接将工作区所有 已跟踪(已add过)的文件提交

7.撤销操作
git commit --amend #撤销上一次提交 并将现有的暂存区的文件重新提交(也可仅改变对内容的描述 即修改 -m 的"说明"部分)
git checkout 文件名 #修改工作区后,返回文件修改之前的状态
git checkout . #回复全部工作区文件的修改
git reset HEAD 文件名 #拉取最近一次提交的版本库的这个文件到暂存区,该操作不影响工作区(HEAD 是头指针)

8.删除文件
git rm 文件名 #删除工作区和暂存区的文件
git rm --cached 文件名 #仅仅删除暂存区的文件(一般用于删除不小心添加到暂存区的文件)
git rm -f 文件名

9.分支
git branch #查看分支
git branch 分支名 #创建分支
git checkout 分支名 #切换分支
git branch -d 分支名 #删除分支
git branch -m 旧名 新名
git checkout master #切换到主分支
git checkout -b 分支名 #新建并切换到分支
git merge 分支名 #合并分支(如果有相同部分会报错,需手动修改,在提交)